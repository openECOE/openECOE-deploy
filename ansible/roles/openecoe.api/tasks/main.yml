- name: Get project {{project_main_controller}} from Github ({{git_repo}})
  include_role:
    name: production.git-pull
  vars:
    git_pull_owner: "{{git_owner}}"
    git_pull_repo: "{{git_repo}}"
    git_pull_branch: "{{git_branch}}"
    git_pull_path: "{{project_path}}"
  when: env != 'local'
  register: git_finished

- name: Create .env configuration file
  template:
    src: env_template
    dest: "{{project_path}}/.env"
    mode: 0644

- name: make sure git is installed
  apt:
    name: git
    state: present
    update_cache: yes

- name: Create virtualenv
  pip:
    virtualenv: "{{ venv_path }}"
    virtualenv_python: python3
    requirements: "{{ requirements_path }}"
  tags: virtualenv

- name: Upgrade API DB
  shell: "{{ venv_path }}/bin/flask db upgrade"
  args:
    chdir: "{{project_path}}"
  environment:
    FLASK_APP: "{{project_main_controller}}.py"
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
  tags: upgradeAPIDB

- name: Create Organization '{{organization}}'
  shell: "{{ venv_path }}/bin/flask create_orga --name '{{organization}}'"
  args:
    chdir: "{{project_path}}"
  environment:
    FLASK_APP: "{{project_main_controller}}.py"
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
  tags: createorga

- name: Create default admin users
  shell: "{{ venv_path }}/bin/flask create_user --email '{{item.value.email}}' --password '{{item.value.password}}' --name  '{{item.value.name}}' --surname '{{item.value.surname}}' --organization_name '{{organization}}' --admin"
  args:
    chdir: "{{project_path}}"
  environment:
    FLASK_APP: "{{project_main_controller}}.py"
    LC_ALL: C.UTF-8
    LANG: C.UTF-8
  tags: createusers
  with_dict: "{{admin_users}}"

- name: Create nginx hosts
  when: env != 'local'
  include_role:
    name: production.nginx
  ignore_errors: yes

- name: Create supervisor process
  when: env != 'local'
  include_role:
    name: production.supervisor